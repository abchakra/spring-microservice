server.port: 9999

spring.application.name: auth-server


app:
  eureka-username: u
  eureka-password: p
  eureka-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: "http://${app.eureka-username}:${app.eureka-password}@${app.eureka-server}:8761/eureka/"
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"


spring:
#  application.name: auth-server
#  cloud.config:
#    failFast: true
#    retry:
#      initialInterval: 3000
#      multiplier: 1.3
#      maxInterval: 10000
#      maxAttempts: 20
#    uri: http://${CONFIG_SERVER_USR}:${CONFIG_SERVER_PWD}@${app.config-server}:8888
  h2:
    console:
      enabled: true
      path: /h2
  datasource:
    url: jdbc:h2:file:${user.home}/.h2/authdb
#    url: jdbc:h2:mem:authdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
  jpa:
    database: h2
    generate-ddl: false
    hibernate:
      ddl-auto: validate
      
    properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
      hibernate.format-sql: true
    show-sql: true
  
  flyway:
    baseline-on-migrate: true
    enabled: true
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    url: ${spring.datasource.url}
    schemas:
    - PUBLIC
    

---
spring.profiles: docker
app:
  eureka-server: eureka
